@model IEnumerable<OnlineInventory.Models.CustomerMD>
@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(document).ready(function ($) {
        $("#Mobile").mask("9999-9999999");
        $("#OpeningBal").val(0);
       
    });
    //change Change Rate Event
    function RateChangeEvent(val) {
         
       
        var Rate = $('#OpeningBal').val();
        if (Rate =="") {
           
            $('#OpeningBal').val(0);
        }
    }
    function func_validate() {
        var chk = 0;

        var ItemName = document.getElementById('Name');
        if (ItemName.value == "") {
            ItemName.style.border = "2px solid red";
            chk = 1;
        }
        else {
            ItemName.style.border = "1px solid #ccc";
        }
        var OpeningBal = document.getElementById('OpeningBal');
        if (OpeningBal.value == "") {
            OpeningBal.style.border = "2px solid red";
            chk = 1;
        }
        else {
            OpeningBal.style.border = "1px solid #ccc";
        }
        //------------------ finally ------------------------------
        if (chk != 0)
            return false;
        else
            return true;
    }

    function SaveCustomer() {
        if (func_validate() == false) {
            return;
        }
        $.ajax(
            {
                type: "POST", //HTTP POST Method
                url: "/Inventory/AddEditCustomers", // Controller/View
                data: { //Passing data
                    CustomerId: $("#CustomerId").val(),
                    Name: $("#Name").val(),
                    Mobile: $("#Mobile").val(),
                    Address: $("#Address").val(),
                    Phone: $("#Phone").val(),
                    OpeningBal: $("#OpeningBal").val(),
                },
               
                success: function (data) {
                    if (data.success) {
                        ResetForm();
                        //oTable = $('#tblSession').DataTable();
                        //oTable.draw();
                        AlertNotification();
                        LoadGrid(0);
                        //alert(data.responseText);
                        ClearAll();
                    } else {
                        alert(data.responseText);
                    }
                }
            });
    }

    function Edit(customerId) {
        $.ajax({
            type: 'GET',
            url: "/Inventory/LoadGridCustomer",
            datatype: JSON,
            data: { customerId: customerId },
            success: function (data) {
                $("#CustomerId").val(data[0].CustomerId),
                    $("#Name").val(data[0].Name),
                    $("#Mobile").val(data[0].Mobile),
                    $("#Phone").val(data[0].Phone),
                    $("#Address").val(data[0].Address);
                $("#OpeningBal").val(data[0].OpeningBal);


                //$("#btnSave").text('Update');
            },
            error: function (data) { }
        });
    }
    function LoadGrid(customerId) {
        $.ajax({
            type: 'GET',
            url: "/Inventory/LoadGridCustomer",
            datatype: JSON,
            data: { customerId: customerId },
            success: function (data) {
                $('#tblItems tbody').empty();
                var count = 0;
                $.each(data, function (i, item) {
                    count = count + 1;
                    var rows = "<tr>"
                        + "<td >" + item.CustomerId + "</td>"
                        + "<td>" + item.Name + "</td>"
                        + "<td>" + item.Mobile + "</td>"
                        + "<td>" + item.Phone + "</td>"
                        + "<td>" + item.Address + "</td>"
                        + "<td>" + item.OpeningBal + "</td>"
                        + "<td>" + "<button onclick='Edit(" + item.CustomerId + ");' class='btn btn-xs btn-info'><i class='icon-edit bigger-120'></i></button>" + "</td>"

                        + "</tr>";
                    $('#tblItems tbody').append(rows);
                });
            }
        });
    }
    function ResetForm() {
        $("#Name").val('');
        $("#Mobile").val('');
        $("#Address").val('');
        $("#OpeningBal").val('');
        $("#Phone").val('');
    }
    function AlertNotification() {
        $("#succesfulAlert").show();;
        $("#succesfulAlert").fadeTo(2000, 500).slideUp(500, function () {
            $("#success-alert").slideUp(500);
        });
    }

    //jQuery(function ($) {
    //    $.ajax({
    //        type: 'GET',
    //        url: "/Inventory/LoadGridCustomer",
    //        datatype: JSON,
    //        data: { customerId: 0 },
    //        success: function (dataq) {
    //            jQuery(grid_selector).jqGrid({
    //                //direction: "rtl",

    //                data: dataq,
    //                datatype: "local",
    //                height: 250,
    //                colNames: ['CustomerId', 'Name', 'Mobile', 'Phone', 'Address'],
    //                colModel: [

    //                    { name: 'CustomerId', index: 'CustomerId', width: 60 },
    //                    { name: 'Name', index: 'Name', width: 90, editable: true },
    //                    { name: 'Mobile', index: 'Mobile', width: 150, editable: true },
    //                    { name: 'Phone', index: 'Phone', width: 70, editable: true },
    //                    { name: 'Address', index: 'Address', width: 90, editable: true, edittype: "select", editoptions: { value: "FE:FedEx;IN:InTime;TN:TNT;AR:ARAMEX" } },

    //                ],

    //                viewrecords: true,
    //                rowNum: 10,
    //                rowList: [10, 20, 30],
    //                pager: pager_selector,
    //                altRows: true,
    //                //toppager: true,

    //                multiselect: false,
    //                //multikey: "ctrlKey",
    //                multiboxonly: true,

    //                loadComplete: function () {
    //                    var table = this;
    //                    setTimeout(function () {
    //                        styleCheckbox(table);

    //                        updateActionIcons(table);
    //                        updatePagerIcons(table);
    //                        enableTooltips(table);
    //                    }, 0);
    //                },

    //                editurl: $path_base + "/dummy.html",//nothing is saved
    //                caption: "jqGrid with inline editing",


    //                autowidth: true

    //            });
    //        }
    //    });
    //    var grid_selector = "#grid-table";
    //    var pager_selector = "#grid-pager";



    //    //enable search/filter toolbar
    //    //jQuery(grid_selector).jqGrid('filterToolbar',{defaultSearch:true,stringResult:true})

    //    //switch element when editing inline
    //    function aceSwitch(cellvalue, options, cell) {
    //        setTimeout(function () {
    //            $(cell).find('input[type=checkbox]')
    //                .wrap('<label class="inline" />')
    //                .addClass('ace ace-switch ace-switch-5')
    //                .after('<span class="lbl"></span>');
    //        }, 0);
    //    }
    //    //enable datepicker
    //    function pickDate(cellvalue, options, cell) {
    //        setTimeout(function () {
    //            $(cell).find('input[type=text]')
    //                .datepicker({ format: 'yyyy-mm-dd', autoclose: true });
    //        }, 0);
    //    }


    //    //navButtons
    //    jQuery(grid_selector).jqGrid('navGrid', pager_selector,
    //        { 	//navbar options
    //            edit: true,
    //            editicon: 'icon-pencil blue',
    //            add: true,
    //            addicon: 'icon-plus-sign purple',
    //            del: true,
    //            delicon: 'icon-trash red',
    //            search: true,
    //            searchicon: 'icon-search orange',
    //            refresh: true,
    //            refreshicon: 'icon-refresh green',
    //            view: true,
    //            viewicon: 'icon-zoom-in grey',
    //        },
    //        {
    //            //edit record form
    //            //closeAfterEdit: true,
    //            recreateForm: true,
    //            beforeShowForm: function (e) {
    //                var form = $(e[0]);
    //                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
    //                style_edit_form(form);
    //            }
    //        },
    //        {
    //            //new record form
    //            closeAfterAdd: true,
    //            recreateForm: true,
    //            viewPagerButtons: false,
    //            beforeShowForm: function (e) {
    //                var form = $(e[0]);
    //                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
    //                style_edit_form(form);
    //            }
    //        },
    //        {
    //            //delete record form
    //            recreateForm: true,
    //            beforeShowForm: function (e) {
    //                var form = $(e[0]);
    //                if (form.data('styled')) return false;

    //                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
    //                style_delete_form(form);

    //                form.data('styled', true);
    //            },
    //            onClick: function (e) {
    //                alert(1);
    //            }
    //        },
    //        {
    //            //search form
    //            recreateForm: true,
    //            afterShowSearch: function (e) {
    //                var form = $(e[0]);
    //                form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
    //                style_search_form(form);
    //            },
    //            afterRedraw: function () {
    //                style_search_filters($(this));
    //            }
    //            ,
    //            multipleSearch: true,
    //            /**
    //            multipleGroup:true,
    //            showQuery: true
    //            */
    //        },
    //        {
    //            //view record form
    //            recreateForm: true,
    //            beforeShowForm: function (e) {
    //                var form = $(e[0]);
    //                form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
    //            }
    //        }
    //    )



    //    function style_edit_form(form) {
    //        //enable datepicker on "sdate" field and switches for "stock" field
    //        form.find('input[name=sdate]').datepicker({ format: 'yyyy-mm-dd', autoclose: true })
    //            .end().find('input[name=stock]')
    //            .addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');

    //        //update buttons classes
    //        var buttons = form.next().find('.EditButton .fm-button');
    //        buttons.addClass('btn btn-sm').find('[class*="-icon"]').remove();//ui-icon, s-icon
    //        buttons.eq(0).addClass('btn-primary').prepend('<i class="icon-ok"></i>');
    //        buttons.eq(1).prepend('<i class="icon-remove"></i>')

    //        buttons = form.next().find('.navButton a');
    //        buttons.find('.ui-icon').remove();
    //        buttons.eq(0).append('<i class="icon-chevron-left"></i>');
    //        buttons.eq(1).append('<i class="icon-chevron-right"></i>');
    //    }

    //    function style_delete_form(form) {
    //        var buttons = form.next().find('.EditButton .fm-button');
    //        buttons.addClass('btn btn-sm').find('[class*="-icon"]').remove();//ui-icon, s-icon
    //        buttons.eq(0).addClass('btn-danger').prepend('<i class="icon-trash"></i>');
    //        buttons.eq(1).prepend('<i class="icon-remove"></i>')
    //    }

    //    function style_search_filters(form) {
    //        form.find('.delete-rule').val('X');
    //        form.find('.add-rule').addClass('btn btn-xs btn-primary');
    //        form.find('.add-group').addClass('btn btn-xs btn-success');
    //        form.find('.delete-group').addClass('btn btn-xs btn-danger');
    //    }
    //    function style_search_form(form) {
    //        var dialog = form.closest('.ui-jqdialog');
    //        var buttons = dialog.find('.EditTable')
    //        buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'icon-retweet');
    //        buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'icon-comment-alt');
    //        buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'icon-search');
    //    }

    //    function beforeDeleteCallback(e) {
    //        var form = $(e[0]);
    //        if (form.data('styled')) return false;

    //        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
    //        style_delete_form(form);

    //        form.data('styled', true);
    //    }

    //    function beforeEditCallback(e) {
    //        var form = $(e[0]);
    //        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
    //        style_edit_form(form);
    //    }



    //    //it causes some flicker when reloading or navigating grid
    //    //it may be possible to have some custom formatter to do this as the grid is being created to prevent this
    //    //or go back to default browser checkbox styles for the grid
    //    function styleCheckbox(table) {
    //        /**
    //            $(table).find('input:checkbox').addClass('ace')
    //            .wrap('<label />')
    //            .after('<span class="lbl align-top" />')


    //            $('.ui-jqgrid-labels th[id*="_cb"]:first-child')
    //            .find('input.cbox[type=checkbox]').addClass('ace')
    //            .wrap('<label />').after('<span class="lbl align-top" />');
    //        */
    //    }


    //    //unlike navButtons icons, action icons in rows seem to be hard-coded
    //    //you can change them like this in here if you want
    //    function updateActionIcons(table) {
    //        /**
    //        var replacement =
    //        {
    //            'ui-icon-pencil' : 'icon-pencil blue',
    //            'ui-icon-trash' : 'icon-trash red',
    //            'ui-icon-disk' : 'icon-ok green',
    //            'ui-icon-cancel' : 'icon-remove red'
    //        };
    //        $(table).find('.ui-pg-div span.ui-icon').each(function(){
    //            var icon = $(this);
    //            var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
    //            if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
    //        })
    //        */
    //    }

    //    //replace icons with FontAwesome icons like above
    //    function updatePagerIcons(table) {
    //        var replacement =
    //        {
    //            'ui-icon-seek-first': 'icon-double-angle-left bigger-140',
    //            'ui-icon-seek-prev': 'icon-angle-left bigger-140',
    //            'ui-icon-seek-next': 'icon-angle-right bigger-140',
    //            'ui-icon-seek-end': 'icon-double-angle-right bigger-140'
    //        };
    //        $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
    //            var icon = $(this);
    //            var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

    //            if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
    //        })
    //    }

    //    function enableTooltips(table) {
    //        $('.navtable .ui-pg-button').tooltip({ container: 'body' });
    //        $(table).find('.ui-pg-div').tooltip({ container: 'body' });
    //    }

    //    //var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');


    //});
</script>
<div class="panel-info">
    <div class="panel-heading">
        <h6>Manage Customers</h6>
    </div>
    <div class="panel-body">
        <div class="col-sm-12">

            <div id="succesfulAlert" hidden="hidden" class="alert alert-block alert-success">
                <button type="button" class="close" data-dismiss="alert">
                    <i class="icon-remove"></i>
                </button>

                <p>
                    <strong>
                        <i class="icon-ok"></i>
                        Response!
                    </strong>
                    Save Sucessfuly...;
                </p>


            </div>
            @Html.Hidden("CustomerId", "0")
            <div class="=row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Name </label>
                        <input type="text" id="Name" placeholder="Customer Name" class="form-control col-sm-12">

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Mobile </label>
                        <input  min="0" max="6" class="form-control input-mask-phone col-sm-12" id="Mobile" placeholder="Mobile" >

                    </div>
                </div>

            </div>

            <div class="=row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Phone </label>
                        <input type="text" id="Phone" placeholder="Phone" class="form-control col-sm-12">

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-sm-3 control-label no-padding-right " for="form-field-1">Address </label>
                        <input type="text" id="Address " placeholder="Address" class="form-control col-sm-12">

                    </div>
                </div>

            </div>
            <div class="=row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-sm-6 control-label no-padding-right" for="form-field-1">Opening Balance </label>
                        <input type="number"  onchange="RateChangeEvent(this);" id="OpeningBal" placeholder="Balance" class="form-control">

                    </div>
                </div>
               

            </div>



        </div>
    </div>
    <div class="panel-footer text-right">
        <p>
           
               <button onclick="ResetForm();" class="btn btn-danger btn-default">Reset</button>

               
                    <button onclick="SaveCustomer();" class="btn btn-info btn-default">Submit</button>
             
           
        </p>
    </div>
</div>
<br />
<table id="tblItems" class="table  table-bordered table-hover">
    <thead>
        <tr>
            <th class="detail-col">CustomerId.</th>
            <th class="detail-col">Name</th>
            <th class="detail-col">Mobile</th>
            <th class="detail-col">Phone</th>
            <th class="detail-col">Address</th>
            <th class="detail-col">Opening Bal.</th>
            <th class="detail-col">Action</th>

        </tr>
    </thead>

    <tbody>
        @foreach (var m in Model)
        {
        <tr>
            <td>@Html.DisplayFor(modelItem => m.CustomerId)</td>
            <td>@Html.DisplayFor(modelItem => m.Name)</td>
            <td>@Html.DisplayFor(modelItem => m.Mobile)</td>
            <td>@Html.DisplayFor(modelItem => m.Phone)</td>
            <td>@Html.DisplayFor(modelItem => m.Address)</td>
            <td>@Html.DisplayFor(modelItem => m.OpeningBal)</td>
            <td>

                <button onclick='Edit(@Html.DisplayFor(modelItem => m.CustomerId))' class="btn btn-xs btn-info"><i class="icon-edit bigger-120"></i></button>
            </td>
        </tr>
        }
    </tbody>
</table>



